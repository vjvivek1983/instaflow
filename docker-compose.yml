version: '3.8'

services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=instaflow
      - REDIS_HOST=redis
      - SECRET_KEY=changeme
      - FIRST_SUPERUSER_EMAIL=admin@example.com
      - FIRST_SUPERUSER_PASSWORD=admin
      - BACKEND_CORS_ORIGINS=["http://localhost:3000"]
      - INSTAGRAM_APP_ID=your_instagram_app_id_from_compose
      - INSTAGRAM_APP_SECRET=your_instagram_app_secret_from_compose
    depends_on:
      - db
      - redis

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: python -m app.worker.automation_worker
    volumes:
      - ./backend:/app
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=instaflow
      - REDIS_HOST=redis
      - SECRET_KEY=changeme
      - INSTAGRAM_APP_ID=your_instagram_app_id_from_compose
      - INSTAGRAM_APP_SECRET=your_instagram_app_secret_from_compose
    depends_on:
      - backend
      - redis
      - db

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost:8000
    depends_on:
      - backend

  db:
    image: postgres:13
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=instaflow
    ports:
      - "5432:5432"

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data

volumes:
  postgres_data:
  redis_data: 